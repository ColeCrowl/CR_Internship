<#
.SYNOPSIS
   The remote system may be in a vulnerable state to CVE-2013-3900 due to a missing or misconfigured registry keys, correcting high vulnerability WinVerifyTrust Signature Validation CVE-2013-3900 Mitigation (EnableCertPaddingCheck)

.NOTES
    Author          : Cole Crowl
    LinkedIn        : https://www.linkedin.com/in/colecrowl/
    GitHub          : https://github.com/ColeCrowl/ColeCrowl
    Date Created    : 2025-07-02
    Last Modified   : 2025-07-02
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    VM              : EnableCertPaddingCheck

.TESTED ON
    Date(s) Tested  : 2025-08-03
    Tested By       : Cole Crowl
    Systems Tested  : Windows 10 Pro 6.3
    PowerShell Ver. :  5.1.26100.4652 

.USAGE
    Put any usage instructions here.
    Example syntax:
    PS C:\> .\__remediation_template(VM_EnableCertPaddingCheck).ps1 
#>

#
# PowerShell script to enable the WinVerifyTrust Signature Validation Mitigation (CVE-2013-3900).
# This script adds the EnableCertPaddingCheck registry value to the correct locations.
# It requires administrator privileges to modify the HKEY_LOCAL_MACHINE hive.
#

# --- Define Variables ---
# The registry path for 32-bit and 64-bit Windows.
$registryPath = "HKLM:\Software\Microsoft\Cryptography\Wintrust\Config"

# The registry path for 64-bit Windows on 32-bit applications.
$registryPathWow64 = "HKLM:\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config"

# The name of the registry value to add.
$valueName = "EnableCertPaddingCheck"

# The value data (DWORD 1 to enable the mitigation).
$valueData = 1

# --- Apply Mitigation to Standard Registry Path ---
Write-Host "Applying mitigation to the standard registry path..."

# Check if the registry path exists. If not, create it.
if (-not (Test-Path $registryPath)) {
    Write-Host "Registry path '$registryPath' not found. Creating..."
    New-Item -Path $registryPath -Force | Out-Null
}

# Set the registry value. This will create or update the value.
Set-ItemProperty -Path $registryPath -Name $valueName -Value $valueData -Type DWord -Force
Write-Host "Value '$valueName' set to '$valueData' at '$registryPath'."

# --- Apply Mitigation to Wow6432Node Path (for 64-bit systems) ---
# Check if the OS is a 64-bit system.
if ([System.Environment]::Is64BitOperatingSystem) {
    Write-Host "`nSystem is 64-bit. Applying mitigation to Wow6432Node..."

    # Check if the registry path exists. If not, create it.
    if (-not (Test-Path $registryPathWow64)) {
        Write-Host "Registry path '$registryPathWow64' not found. Creating..."
        New-Item -Path $registryPathWow64 -Force | Out-Null
    }

    # Set the registry value.
    Set-ItemProperty -Path $registryPathWow64 -Name $valueName -Value $valueData -Type DWord -Force
    Write-Host "Value '$valueName' set to '$valueData' at '$registryPathWow64'."
} else {
    Write-Host "`nSystem is 32-bit. No action required for Wow6432Node."
}

Write-Host "`nScript finished. The mitigation for CVE-2013-3900 has been applied."

# Optional: To verify the changes, you can use these commands after running the script:
# Get-ItemProperty -Path $registryPath -Name $valueName
# if ([System.Environment]::Is64BitOperatingSystem) {
#     Get-ItemProperty -Path $registryPathWow64 -Name $valueName
# }
